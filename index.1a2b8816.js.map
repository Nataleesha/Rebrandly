{"mappings":"AAAO,MCSDA,EAAaC,SAASC,cAAc,UACpCC,EAAgBF,SAASC,cAAc,YACvCE,EAAgBH,SAASC,cAAc,kBAEvCG,EAAa,KACjB,MAAMC,EAAeN,EAAWO,MAC1BC,EAAOC,KAAKC,UAAU,CAAEC,YAAaL,IAE3CM,MAVU,qCAUC,CACTC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,OAfU,oCAiBZC,KAAMR,IAELS,MACEC,IACC,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,sBAEjBC,IACCC,QAAQC,IAAIF,EAAaG,QAAO,IAGnCR,MAAMS,IDpCmB,IAACC,KCqCVD,GDnCXE,OACNC,cAAcC,UACZ,2DAEFD,cAAcC,UAAY,qCAAqCH,EAAII,eC+BlD,GACjB,EAWJ5B,EAAc6B,iBAAiB,SARNC,IAEvB,IADAA,EAAMC,iBACC9B,EAAc+B,YACnB/B,EAAcgC,YAAYhC,EAAc+B,YAE1C9B,GAAA","sources":["src/js/renderFunctions.js","src/js/index.js"],"sourcesContent":["export const renderResponse = (res) => {\n  // Displays either message depending on results\n  if (res.errors) {\n    responseField.innerHTML =\n      \"<p>Sorry, couldn't format your URL.</p><p>Try again.</p>\";\n  } else {\n    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;\n  }\n};\n\n// Manipulates responseField to render an unformatted response\nexport const renderRawResponse = (res) => {\n  // Displays either message depending on results\n  if (res.errors) {\n    responseField.innerHTML =\n      \"<p>Sorry, couldn't format your URL.</p><p>Try again.</p>\";\n  } else {\n    // Adds line breaks for JSON\n    let structuredRes = JSON.stringify(res).replace(/,/g, \", \\n\");\n    structuredRes = `<pre>${structuredRes}</pre>`;\n    responseField.innerHTML = `${structuredRes}`;\n  }\n};\n\n// Renders the JSON that was returned when the Promise from fetch resolves.\nexport const renderJsonResponse = (response) => {\n  // Creates an empty object to store the JSON in key-value pairs\n  let rawJson = {};\n  for (let key in response) {\n    rawJson[key] = response[key];\n  }\n  // Converts JSON into a string and adding line breaks to make it easier to read\n  rawJson = JSON.stringify(rawJson).replace(/,/g, \", \\n\");\n  // Manipulates responseField to show the returned JSON.\n  responseField.innerHTML = `<pre>${rawJson}</pre>`;\n};\n","import {\n  renderResponse,\n  renderRawResponse,\n  renderJsonResponse,\n} from \"./renderFunctions\";\n\nconst API_KEY = \"dc42d62a4cda439f87bf91bacf04925c\";\nconst URL = \"https://api.rebrandly.com/v1/links\";\n\nconst inputField = document.querySelector(\"#input\");\nconst shortenButton = document.querySelector(\"#shorten\");\nconst responseField = document.querySelector(\"#responseField\");\n\nconst shortenUrl = () => {\n  const urlToShorten = inputField.value;\n  const data = JSON.stringify({ destination: urlToShorten });\n\n  fetch(URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      apikey: API_KEY,\n    },\n    body: data,\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Request failed!\");\n      },\n      (networkError) => {\n        console.log(networkError.message);\n      }\n    )\n    .then((jsonResponse) => {\n      renderResponse(jsonResponse);\n    });\n};\n\nconst displayShortUrl = (event) => {\n  event.preventDefault();\n  while (responseField.firstChild) {\n    responseField.removeChild(responseField.firstChild);\n  }\n  shortenUrl();\n};\n\nshortenButton.addEventListener(\"click\", displayShortUrl);\n"],"names":["$8f6a480bb40b134f$var$inputField","document","querySelector","$8f6a480bb40b134f$var$shortenButton","$8f6a480bb40b134f$var$responseField","$8f6a480bb40b134f$var$shortenUrl","urlToShorten","value","data","JSON","stringify","destination","fetch","method","headers","apikey","body","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","res","errors","responseField","innerHTML","shortUrl","addEventListener","event","preventDefault","firstChild","removeChild"],"version":3,"file":"index.1a2b8816.js.map"}