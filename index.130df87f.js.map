{"mappings":"AAAO,MCKDA,EAAaC,SAASC,cAAc,UACpCC,EAAgBF,SAASC,cAAc,YACvCE,EAAgBH,SAASC,cAAc,kBAEvCG,EAAaC,UACjB,MAAMC,EAAeP,EAAWQ,MAC1BC,EAAOC,KAAKC,UAAU,CAAEC,YAAaL,IAC3C,IACE,MAAMM,QAAiBC,MAVf,qCAU0B,CAChCC,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACP,eAAgB,mBAChBC,OAhBQ,sCAmBZ,GAAIL,EAASM,GAAI,CACf,MAAMC,QAAqBP,EAASQ,QDtBXC,ECuBVF,GDrBXG,OACNC,cAAcC,UACZ,2DAEFD,cAAcC,UAAY,qCAAqCH,EAAII,eCkBnE,CACF,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CD3B4B,IAACL,CC2B7B,EAWFnB,EAAc2B,iBAAiB,SARNC,IAEvB,IADAA,EAAMC,iBACC5B,EAAc6B,YACnB7B,EAAc8B,YAAY9B,EAAc6B,YAE1C5B,GAAA","sources":["src/js/renderFunctions.js","src/js/index.js"],"sourcesContent":["export const renderResponse = (res) => {\n  // Displays either message depending on results\n  if (res.errors) {\n    responseField.innerHTML =\n      \"<p>Sorry, couldn't format your URL.</p><p>Try again.</p>\";\n  } else {\n    responseField.innerHTML = `<p>Your shortened url is: </p><p> ${res.shortUrl} </p>`;\n  }\n};\n\n// Manipulates responseField to render an unformatted response\nexport const renderRawResponse = (res) => {\n  // Displays either message depending on results\n  if (res.errors) {\n    responseField.innerHTML =\n      \"<p>Sorry, couldn't format your URL.</p><p>Try again.</p>\";\n  } else {\n    // Adds line breaks for JSON\n    let structuredRes = JSON.stringify(res).replace(/,/g, \", \\n\");\n    structuredRes = `<pre>${structuredRes}</pre>`;\n    responseField.innerHTML = `${structuredRes}`;\n  }\n};\n\n// Renders the JSON that was returned when the Promise from fetch resolves.\nexport const renderJsonResponse = (response) => {\n  // Creates an empty object to store the JSON in key-value pairs\n  let rawJson = {};\n  for (let key in response) {\n    rawJson[key] = response[key];\n  }\n  // Converts JSON into a string and adding line breaks to make it easier to read\n  rawJson = JSON.stringify(rawJson).replace(/,/g, \", \\n\");\n  // Manipulates responseField to show the returned JSON.\n  responseField.innerHTML = `<pre>${rawJson}</pre>`;\n};\n","import { renderResponse } from \"./renderFunctions\";\n\nconst API_KEY = \"dc42d62a4cda439f87bf91bacf04925c\";\nconst URL = \"https://api.rebrandly.com/v1/links\";\n\nconst inputField = document.querySelector(\"#input\");\nconst shortenButton = document.querySelector(\"#shorten\");\nconst responseField = document.querySelector(\"#responseField\");\n\nconst shortenUrl = async () => {\n  const urlToShorten = inputField.value;\n  const data = JSON.stringify({ destination: urlToShorten });\n  try {\n    const response = await fetch(URL, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-type\": \"application/json\",\n        apikey: API_KEY,\n      },\n    });\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      renderResponse(jsonResponse);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst displayShortUrl = (event) => {\n  event.preventDefault();\n  while (responseField.firstChild) {\n    responseField.removeChild(responseField.firstChild);\n  }\n  shortenUrl();\n};\n\nshortenButton.addEventListener(\"click\", displayShortUrl);\n"],"names":["$8f6a480bb40b134f$var$inputField","document","querySelector","$8f6a480bb40b134f$var$shortenButton","$8f6a480bb40b134f$var$responseField","$8f6a480bb40b134f$var$shortenUrl","async","urlToShorten","value","data","JSON","stringify","destination","response","fetch","method","body","headers","apikey","ok","jsonResponse","json","res","errors","responseField","innerHTML","shortUrl","error","console","log","addEventListener","event","preventDefault","firstChild","removeChild"],"version":3,"file":"index.130df87f.js.map"}